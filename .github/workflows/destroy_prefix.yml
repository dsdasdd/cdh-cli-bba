---
name: Destroy prefix resources

on:
  workflow_dispatch:
    inputs:
      prefix:
        description: Prefix to destroy
        required: true

jobs:
  create_virtualenv:
    runs-on: [self-hosted, ubuntu-latest]
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - uses: syphar/restore-virtualenv@v1
        id: cache-virtualenv
        with:
          custom_cache_key_element: ${{ github.sha }}

      - uses: syphar/restore-pip-download-cache@v1
        if: steps.cache-virtualenv.outputs.cache-hit != 'true'

      - name: Install dependencies
        run: |
          python -m  pip install -r src/requirements-dev.txt -r src/requirements.txt
          python -m pip install src/cdh_core
          python -m pip install src/lambdas/cdh_core_api
        if: steps.cache-virtualenv.outputs.cache-hit != 'true'

  cleanup:
    needs: create_virtualenv
    if: (github.event.inputs.prefix != '') && (needs.create_virtualenv.result == 'success')
    uses: ./.github/workflows/reusable_cleanup.yml
    with:
      environment: dev
      prefix: ${{ github.event.inputs.prefix }}

  list-purpose-account-tuples:
    needs: [cleanup, create_virtualenv]
    if: needs.create_virtualenv.result == 'success'
    runs-on: [self-hosted, ubuntu-latest]
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - uses: syphar/restore-virtualenv@v1
        id: cache-virtualenv
        with:
          custom_cache_key_element: ${{ github.sha }}

      - name: Set Config file env var
        run: echo "CDH_CORE_CONFIG_FILE_PATH=${GITHUB_WORKSPACE}/infrastructure/cdh-oss.bmw.cloud/cdh-core-config-test-deployment.yaml" >> $GITHUB_ENV

      - name: Retrieve account-purpose tuples
        id: set-matrix
        run: |
          accounts=$(python infrastructure/bin/get_purpose_account_tuples.py)
          echo "matrix=$accounts" >> $GITHUB_OUTPUT
        env:
          ENVIRONMENT: dev
          PURPOSES: '["api","resources","test"]'

  destroy:
    needs: list-purpose-account-tuples
    runs-on: [self-hosted, ubuntu-latest]
    env:
      TF_IN_AUTOMATION: true
      TF_INPUT: false
    permissions:
      id-token: write
      contents: read
    strategy:
      fail-fast: false
      matrix:
        purpose-accounts: ${{ fromJson(needs.list-purpose-account-tuples.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - uses: syphar/restore-virtualenv@v1
        id: cache-virtualenv
        with:
          custom_cache_key_element: ${{ github.sha }}

      - name: Set Config file env var
        run: echo "CDH_CORE_CONFIG_FILE_PATH=${GITHUB_WORKSPACE}/infrastructure/cdh-oss.bmw.cloud/cdh-core-config-test-deployment.yaml" >> $GITHUB_ENV

      - name: Configure AWS credentials
        id: aws_credentials
        uses: aws-actions/configure-aws-credentials@v1-node16  # https://github.com/aws-actions/configure-aws-credentials/issues/489
        with:
          role-to-assume: arn:aws:iam::${{ matrix.purpose-accounts.account }}:role/cdh-deployer
          aws-region: eu-west-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.5

      - name: Check Terraform files are up-to-date
        run: pytest "infrastructure/bin/validate_cdh_deployment_test.py"
        env:
          LOG_TIMEOUT: 10

      - name: Terraform init
        run: terraform init -backend-config=vars/${{ matrix.purpose-accounts.account }}/backend-config.hcl -backend-config="key=${{ github.event.inputs.prefix
          }}${{ matrix.purpose-accounts.purpose }}/${{matrix.purpose-accounts.account }}"
        working-directory: ./infrastructure/cdh-oss.bmw.cloud/${{ matrix.purpose-accounts.purpose }}

      - name: Terraform destroy
        run: terraform destroy -var-file=vars/${{ matrix.purpose-accounts.account }}/variables.tfvars -var="resource_name_prefix=${{ github.event.inputs.prefix}}"
          -auto-approve
        working-directory: ./infrastructure/cdh-oss.bmw.cloud/${{ matrix.purpose-accounts.purpose }}
